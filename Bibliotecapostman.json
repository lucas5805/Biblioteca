{
	"info": {
		"_postman_id": "980a2262-5c64-4a5c-a0bb-de720ce06365",
		"name": "Biblioteca API",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "37486970"
	},
	"item": [
		{
			"name": "Libros",
			"item": [
				{
					"name": "Listar libros",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8000/api/libros",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8000",
							"path": [
								"api",
								"libros"
							]
						},
						"description": "Este endpoint envía una solicitud HTTP GET para recuperar una lista de Libros del servidor. La respuesta de esta solicitud sera presentada como texto plano para proporcionar una estructura clara de los datos que devuelve la API."
					},
					"response": []
				},
				{
					"name": "Agregar Libros",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"action\": \"add_modify\",\r\n  \"nombre\": \"Buscando a fgjnsjn\",\r\n  \"disponibilidad\": true\r\n   \r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8000/libros",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8000",
							"path": [
								"libros"
							]
						},
						"description": "Este endpoint permite al usuario crear un nuevo libro enviando una solicitud HTTP POST a la URL especificada. La solicitud debe incluir un payload JSON en el cuerpo de la solicitud raw, con las claves \"action\", \"nombre\" y \"disponibilidad\" para especificar la acción, el nombre y la disponibilidad del libro, respectivamente. Tras una ejecución exitosa, la respuesta será en forma de texto plano que documenta la estructura de los datos de respuesta."
					},
					"response": [
						{
							"name": "Ejemplo funcional",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"action\": \"add_modify\", //accion a realizar, no modificar\r\n  \"nombre\": \"Buscando a Willy\",//string\r\n  \"disponibilidad\": true//boolean o BIT puede ser true o false\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8000/libros",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8000",
									"path": [
										"libros"
									]
								}
							},
							"_postman_previewlanguage": null,
							"header": null,
							"cookie": [],
							"body": null
						},
						{
							"name": "Ejemplo funcional 2",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"action\": \"add_modify\", //accion a realizar, no modificar\r\n  \"nombre\": \"Martin fierro\",//string\r\n  \"disponibilidad\": false//boolean o BIT puede ser true o false\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8000/libros",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8000",
									"path": [
										"libros"
									]
								}
							},
							"_postman_previewlanguage": null,
							"header": null,
							"cookie": [],
							"body": null
						}
					]
				},
				{
					"name": "Modificar Libros",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"action\": \"add_modify\",\r\n  \"id\": \"62\",\r\n  \"nombre\": \"Buscando a Wily\",\r\n  \"disponibilidad\": true\r\n   \r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8000/libros",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8000",
							"path": [
								"libros"
							]
						},
						"description": "Este endpoint permite al usuario Modificar un libro enviando una solicitud HTTP POST a la URL especificada. La solicitud debe incluir un payload JSON en el cuerpo de la solicitud raw, con las claves \"action\", \"id\", \"nombre\" y \"disponibilidad\" para especificar la acción, el identificador, el nombre y la disponibilidad del libro, respectivamente. Tras una ejecución exitosa, la respuesta será en forma de texto plano que documenta la estructura de los datos de respuesta.\n\nNota: Aunque esencialmente este endpoint comparte una accion con el de agregar, si no se agrega la id para especificar la modificacion, se realizara una incersion en la tabla."
					},
					"response": [
						{
							"name": "Ejemplo funcional",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"action\": \"add_modify\", //accion a realizar, no modificar\r\n  \"id\": \"80\", //int\r\n  \"nombre\": \"Buscando a Willy\",//string\r\n  \"disponibilidad\": false//boolean o BIT puede ser true o false\r\n}\r\n   \r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8000/libros",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8000",
									"path": [
										"libros"
									]
								}
							},
							"_postman_previewlanguage": null,
							"header": null,
							"cookie": [],
							"body": null
						},
						{
							"name": "Ejemplo no funcional",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"action\": \"add_modify\",//accion a realizar, no modificar\r\n//\"id\": \"80\", sin la id no funciona. solo se hace una insercion.\r\n  \"nombre\": \"Buscando a Willy\",//string\r\n  \"disponibilidad\": true//boolean o BIT puede ser true o false\r\n}\r\n   \r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8000/libros",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8000",
									"path": [
										"libros"
									]
								}
							},
							"_postman_previewlanguage": null,
							"header": null,
							"cookie": [],
							"body": null
						}
					]
				},
				{
					"name": "Eliminar Libro",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://localhost:8000/libros/50",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8000",
							"path": [
								"libros",
								"50"
							]
						},
						"description": "### Request\n\nEste endpoint permite al usuario realizar la eliminacion de un libro enviando una solicitud de HTTP DELETE a una URL especifica, y devolviendo una de texto plano que indique el resultado. Solo con poner el numero identificador del libro"
					},
					"response": []
				},
				{
					"name": "Buscar",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8000/libros/55",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8000",
							"path": [
								"libros",
								"55"
							]
						},
						"description": "este endpoint es parecido al de DELETE, se envia una solicitud de get con el id dell ibro buscado en la url y con eso deberia mostrarte ese libro.\n\nNota: solo funciona con id, si se introduce un titulo no devolvera nada."
					},
					"response": []
				}
			]
		},
		{
			"name": "Miembros",
			"item": [
				{
					"name": "mostrar miembros",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8000/api/miembros",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8000",
							"path": [
								"api",
								"miembros"
							]
						},
						"description": "Este endpoint envía una solicitud HTTP GET para recuperar una lista de miembros del servidor. La respuesta de esta solicitud sera documentada como texto plano para proporcionar una estructura clara de los datos que devuelve la API."
					},
					"response": []
				},
				{
					"name": "Agregar Miembro",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"action\": \"add_modify\", \r\n  \"apellido_nombre\": \"nombre\",\r\n  \"direccion\": \"si\",\r\n  \"telefono\": 555\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8000/miembros",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8000",
							"path": [
								"miembros"
							]
						},
						"description": "Este endpoint permite al usuario crear un nuevo miembro enviando una solicitud HTTP POST a la URL especificada. La solicitud debe incluir un payload JSON en el cuerpo de la solicitud raw, con las claves \"action\", \"apellido_nombre\", \"direccion\" y \"telefono\" para especificar la acción, el nombre, direccion y telefono del empleado, respectivamente. Tras una ejecución exitosa, la respuesta será en forma de texto plano que documenta la estructura de los datos de respuesta."
					},
					"response": [
						{
							"name": "Ejemplo funcional",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"action\": \"add_modify\", //es la accion a realizar, no modificar\r\n  \"apellido_nombre\": \"nombre\", //string\r\n  \"direccion\": \"si\", //string\r\n  \"telefono\": 555 //string (en caso de introducir simbologia alfanumerica)\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8000/miembros",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8000",
									"path": [
										"miembros"
									]
								}
							},
							"_postman_previewlanguage": null,
							"header": null,
							"cookie": [],
							"body": null
						}
					]
				},
				{
					"name": "Modificar Miembro",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"action\": \"add_modify\",\r\n  \"id\": \"11\",\r\n  \"apellido_nombre\": \"rodolfo\",\r\n  \"direccion\": \"si\",\r\n  \"telefono\": 555\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8000/miembros",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8000",
							"path": [
								"miembros"
							]
						},
						"description": "Este endpoint permite al usuario Modificar un miembro enviando una solicitud HTTP POST a la URL especificada. La solicitud debe incluir un payload JSON en el cuerpo de la solicitud raw, con las claves \"action\", \"id\", \"apellido_nombre\", \"direccion\" y \"telefono\" para especificar la acción, el identificador, el nombre, contacto y direccion del miembro, respectivamente. Tras una ejecución exitosa, la respuesta será en forma de texto plano que documenta la estructura de los datos de respuesta.\n\nNota: Aunque esencialmente este endpoint comparte una accion con el de agregar, si no se agrega la id para especificar la modificacion, se realizara una incersion en la tabla."
					},
					"response": [
						{
							"name": "Ejemplo funcional",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"action\": \"add_modify\",\r\n  \"id\": \"3\",\r\n  \"apellido_nombre\": \"nombre\",\r\n  \"direccion\": \"si\",\r\n  \"telefono\": 555\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8000/miembros",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8000",
									"path": [
										"miembros"
									]
								}
							},
							"_postman_previewlanguage": null,
							"header": null,
							"cookie": [],
							"body": null
						}
					]
				},
				{
					"name": "Borrar miembro",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://localhost:8000/miembros/11",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8000",
							"path": [
								"miembros",
								"11"
							]
						},
						"description": "Este endpoint peromite al usuario realizar la eliminacion de un miembro enviando una solicitud de HTTP DELETE a una URL especifica, y devolviendo una de texto plano que indique el resultado. Solo con poner el id del mismo."
					},
					"response": []
				},
				{
					"name": "Buscar",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8000/miembros/2",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8000",
							"path": [
								"miembros",
								"2"
							]
						},
						"description": "este endpoint es parecido al de DELETE, se envia una solicitud de get con el id del meimbro buscado en la url y con eso deberia mostrarte ese libro.\n\nNota: solo funciona con id, si se introduce un nombre u otro tipo de dato no devolvera nada."
					},
					"response": []
				}
			]
		},
		{
			"name": "Rentas",
			"item": [
				{
					"name": "mostrar rentas",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8000/api/rentas",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8000",
							"path": [
								"api",
								"rentas"
							]
						},
						"description": "Este endpoint envía una solicitud HTTP GET para recuperar una lista de Rentas del servidor. La respuesta de esta solicitud sera documentada como texto plano para proporcionar una estructura clara de los datos que devuelve la API."
					},
					"response": []
				},
				{
					"name": "Agregar Renta",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"action\": \"add_modify\", //accion a realizar, no modificar\r\n  \"fechainicio\": \"2024-05-06\", //date\r\n  \"fechadevolucion\": \"2024-06-07\", //date\r\n  \"id_cliente\":\"2\", //int\r\n  \"id_libro\":\"2\" //int\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8000/rentas",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8000",
							"path": [
								"rentas"
							]
						},
						"description": "Este endpoint permite al usuario crear una nueva renta enviando una solicitud HTTP POST a la URL especificada. La solicitud debe incluir un payload JSON en el cuerpo de la solicitud raw, con las claves \"action\", \"fechainicio\" y \"fechadevolucion\", \"id_cliente\", \"id_libro\" para especificar la acción, duracion, cliente y libro de la renta, respectivamente. Tras una ejecución exitosa, la respuesta será en forma de texto plano que documenta la estructura de los datos de respuesta.\n\nNota: es importante que al realizar una insercion se respete el formato de fecha que es: AAAA/MM/DD."
					},
					"response": [
						{
							"name": "Ejemplo funcional",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"action\": \"add_modify\", //accion a realizar, no modificar\r\n  \"fechainicio\": \"2024-05-06\", //date\r\n  \"fechadevolucion\": \"2024-06-07\", //date\r\n  \"id_cliente\":\"2\", //int\r\n  \"id_libro\":\"2\" //int\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8000/rentas",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8000",
									"path": [
										"rentas"
									]
								}
							},
							"_postman_previewlanguage": null,
							"header": null,
							"cookie": [],
							"body": null
						}
					]
				},
				{
					"name": "Modificar Renta",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"action\": \"add_modify\", //accion a realizar, no modificar\r\n  \"id\":\"2\", //int\r\n  \"fechainicio\": \"2024-05-06\", //date\r\n  \"fechadevolucion\": \"2024-06-07\", //date\r\n  \"id_cliente\":\"2\", //int\r\n  \"id_libro\":\"2\" //int\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8000/rentas",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8000",
							"path": [
								"rentas"
							]
						},
						"description": "Este endpoint permite al usuario Modificar una renta enviando una solicitud HTTP POST a la URL especificada. La solicitud debe incluir un payload JSON en el cuerpo de la solicitud raw, con las claves \"action\", \"fechainicio\" y \"fechadevolucion\", \"id_cliente\", \"id_libro\" para especificar la acción, duracion, cliente y libro de la renta, respectivamente. Tras una ejecución exitosa, la respuesta será en forma de texto plano que documenta la estructura de los datos de respuesta.\n\nNota: Aunque esencialmente este endpoint comparte una accion con el de agregar, si no se agrega la id para especificar la modificacion, se realizara una incersion en la tabla."
					},
					"response": [
						{
							"name": "Ejemplo funcional",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"action\": \"add_modify\", //accion a realizar, no modificar\r\n  \"id\":\"2\", //int\r\n  \"fechainicio\": \"2024-05-06\", //date\r\n  \"fechadevolucion\": \"2024-06-07\", //date\r\n  \"id_cliente\":\"2\", //int\r\n  \"id_libro\":\"2\" //int\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8000/rentas",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8000",
									"path": [
										"rentas"
									]
								}
							},
							"_postman_previewlanguage": null,
							"header": null,
							"cookie": [],
							"body": null
						}
					]
				},
				{
					"name": "Borrar renta",
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8000/rentas/8",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8000",
							"path": [
								"rentas",
								"8"
							]
						},
						"description": "Este endpoint peromite al usuario realizar la eliminacion de una renta enviando una solicitud de HTTP DELETE a una URL especifica, y devolviendo una de texto plano que indique el resultado. Solo con poner el id de la misma."
					},
					"response": []
				},
				{
					"name": "Buscar",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8000/rentas/10",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8000",
							"path": [
								"rentas",
								"10"
							]
						},
						"description": "este endpoint es parecido al de DELETE, se envia una solicitud de get con el id de la renta buscada en la url y con eso deberia mostrarte ese libro.\n\nNota: solo funciona con id, si se introduce una fecha u otro tipo de dato no devolvera nada."
					},
					"response": []
				}
			]
		},
		{
			"name": "Empleados(!)",
			"item": [
				{
					"name": "Listar empleados",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8000/api/empleados",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8000",
							"path": [
								"api",
								"empleados"
							]
						},
						"description": "Este endpoint envía una solicitud HTTP GET para recuperar una lista de Empleados del servidor. La respuesta de esta solicitud sera presentada como texto plano para proporcionar una estructura clara de los datos que devuelve la API."
					},
					"response": []
				},
				{
					"name": "Agregar empleado",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"action\": \"add_modify\",\r\n  \"apellido_nombre\": \"Raul Perez\",\r\n  \"direccion\": \"Mendoza 1234\",\r\n  \"telefono\": \"341 156-4864\",\r\n  \"Dias\": \"Lunes y miercoles\",\r\n  \"Horarios\": \"10AM - 14PM\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8000/empleados",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8000",
							"path": [
								"empleados"
							]
						},
						"description": "Este endpoint permite al usuario crear un nuevo empleado enviando una solicitud HTTP POST a la URL especificada. La solicitud debe incluir un payload JSON en el cuerpo de la solicitud raw, con las claves \"action\", \"apellido_nombre\", \"direccion\", \"telefono\", \"Dias\" y \"Horarios\" para especificar la acción, el nombre, direccion, telefono, dias y horarios del empleado, respectivamente. Tras una ejecución exitosa, la respuesta será en forma de texto plano que documenta la estructura de los datos de respuesta."
					},
					"response": [
						{
							"name": "Ejemplo funcional",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"action\": \"add_modify\",//accion a realizar, no modificar\r\n  \"apellido_nombre\": \"Raul Perez\", //string\r\n  \"direccion\": \"Mendoza 1234\",//string\r\n  \"telefono\": \"341 156-4864\",//string\r\n  \"Dias\": \"Lunes y miercoles\",//string\r\n  \"Horarios\": \"10AM - 14PM\"//string\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8000/empleados",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8000",
									"path": [
										"empleados"
									]
								}
							},
							"_postman_previewlanguage": null,
							"header": null,
							"cookie": [],
							"body": null
						}
					]
				},
				{
					"name": "Modificar Empleado",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"action\": \"add_modify\",\r\n  \"apellido_nombre\": \"Martin Castillo\", \r\n  \"direccion\": \"Cordoba 1568\",\r\n  \"telefono\": \"341 458-7896\",\r\n  \"Dias\": \"Lunes y miercoles\",\r\n  \"Horarios\": \"10AM - 14PM\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8000/empleados",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8000",
							"path": [
								"empleados"
							]
						},
						"description": "Este endpoint permite al usuario Modificar un libro enviando una solicitud HTTP POST a la URL especificada. La solicitud debe incluir un payload JSON en el cuerpo de la solicitud raw, con las claves \"action\", \"apellido_nombre\", \"direccion\", \"telefono\", \"Dias\" y \"Horarios\" para especificar la acción, el nombre, direccion, telefono, dias y horarios del empleado, respectivamente.Tras una ejecución exitosa, la respuesta será en forma de texto plano que documenta la estructura de los datos de respuesta.\n\nNota: Aunque esencialmente este endpoint comparte una accion con el de agregar, si no se agrega la id para especificar la modificacion, se realizara una incersion en la tabla."
					},
					"response": [
						{
							"name": "Ejemplo funcional",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"action\": \"add_modify\",//accion a realizar, no modificar\r\n  \"apellido_nombre\": \"Martin Castillo\", //string\r\n  \"direccion\": \"Cordoba 1568\",//string\r\n  \"telefono\": \"341 458-7896\",//string\r\n  \"Dias\": \"Lunes y miercoles\",//string\r\n  \"Horarios\": \"10AM - 14PM\"//string\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8000/empleados",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8000",
									"path": [
										"empleados"
									]
								}
							},
							"_postman_previewlanguage": null,
							"header": null,
							"cookie": [],
							"body": null
						}
					]
				},
				{
					"name": "Borrar empleado",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://localhost:8000/empleados/16",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8000",
							"path": [
								"empleados",
								"16"
							]
						},
						"description": "Este endpoint permite al usuario eliminar un empleado enviando una solicitud HTTP POST a la URL especificada. La solicitud debe incluir un payload JSON en el cuerpo de la solicitud raw, con las claves \"action\" e \"id\". La clave \"action\" debe establecerse en \"delete\", y la clave \"id\" debe contener el identificador del empleado que se desea eliminar. Tras una ejecución exitosa, la respuesta será en forma de texto plano que documenta la estructura de los datos de respuesta."
					},
					"response": []
				},
				{
					"name": "Buscar",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8000/empleados/14",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8000",
							"path": [
								"empleados",
								"14"
							]
						},
						"description": "este endpoint es parecido al de DELETE, se envia una solicitud de get con el id del empleado buscado en la url y con eso deberia mostrarte ese libro.\n\nNota: solo funciona con id, si se introduce un nombre no devolvera nada."
					},
					"response": []
				}
			]
		}
	]
}